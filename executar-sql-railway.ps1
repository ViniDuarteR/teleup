# üóÑÔ∏è Executar Script SQL no Railway
# Script para criar todas as tabelas do TeleUp

Write-Host ""
Write-Host "=" -ForegroundColor Cyan * 70
Write-Host "üóÑÔ∏è EXECUTAR SCRIPT SQL NO RAILWAY" -ForegroundColor Cyan
Write-Host "=" -ForegroundColor Cyan * 70
Write-Host ""

# Verificar se o arquivo SQL existe
$sqlFile = "backend/config/postgres-all-sql-commands.sql"
if (-not (Test-Path $sqlFile)) {
    Write-Host "‚ùå Arquivo SQL n√£o encontrado: $sqlFile" -ForegroundColor Red
    exit 1
}

Write-Host "üìÑ Arquivo SQL encontrado: $sqlFile" -ForegroundColor Green

Write-Host ""
Write-Host "üîç INSTRU√á√ïES PARA EXECUTAR NO RAILWAY:" -ForegroundColor Yellow
Write-Host "-" * 50 -ForegroundColor DarkGray

Write-Host ""
Write-Host "1Ô∏è‚É£  Acesse o Railway Dashboard:" -ForegroundColor White
Write-Host "   https://railway.com/dashboard" -ForegroundColor Cyan
Write-Host "   ‚Üí Clique no projeto 'clever-perception'" -ForegroundColor White
Write-Host "   ‚Üí Clique no servi√ßo 'Postgres'" -ForegroundColor White

Write-Host ""
Write-Host "2Ô∏è‚É£  Abra o Query Editor:" -ForegroundColor White
Write-Host "   ‚Üí Aba 'Database'" -ForegroundColor White
Write-Host "   ‚Üí Aba 'Data'" -ForegroundColor White
Write-Host "   ‚Üí Clique em 'Query' ou 'SQL Editor'" -ForegroundColor White

Write-Host ""
Write-Host "3Ô∏è‚É£  Execute o Script:" -ForegroundColor White
Write-Host "   ‚Üí Copie o conte√∫do do arquivo SQL" -ForegroundColor White
Write-Host "   ‚Üí Cole no Query Editor" -ForegroundColor White
Write-Host "   ‚Üí Clique em 'Run' ou 'Execute'" -ForegroundColor White

Write-Host ""
Write-Host "üìã CONTE√öDO DO SCRIPT SQL:" -ForegroundColor Cyan
Write-Host "-" * 50 -ForegroundColor DarkGray

# Ler e exibir o conte√∫do do arquivo SQL
$sqlContent = Get-Content $sqlFile -Raw
Write-Host ""
Write-Host $sqlContent -ForegroundColor White

Write-Host ""
Write-Host "=" -ForegroundColor Green * 70
Write-Host "‚úÖ SCRIPT SQL PRONTO PARA EXECUTAR!" -ForegroundColor Green
Write-Host "=" -ForegroundColor Green * 70
Write-Host ""

Write-Host "üìã O QUE O SCRIPT VAI CRIAR:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Tabelas: empresas, gestores, operadores" -ForegroundColor Green
Write-Host "   ‚úÖ Tabelas: sessoes, sessoes_empresa" -ForegroundColor Green
Write-Host "   ‚úÖ Tabelas: recompensas, compras" -ForegroundColor Green
Write-Host "   ‚úÖ Tabelas: missoes, progresso_missoes, conquistas" -ForegroundColor Green
Write-Host "   ‚úÖ Usu√°rios padr√£o para teste" -ForegroundColor Green
Write-Host "   ‚úÖ Recompensas padr√£o" -ForegroundColor Green
Write-Host "   ‚úÖ Views e triggers" -ForegroundColor Green

Write-Host ""
Write-Host "üîê USU√ÅRIOS PADR√ÉO CRIADOS:" -ForegroundColor Yellow
Write-Host "   üìß Email: contato@teleup.com | Senha: password" -ForegroundColor White
Write-Host "   üìß Email: hyttalo@teleup.com | Senha: password" -ForegroundColor White
Write-Host "   üìß Email: mateus@teleup.com | Senha: password" -ForegroundColor White

Write-Host ""
Write-Host "‚è≥ Aguarde a execu√ß√£o e depois teste a conex√£o!" -ForegroundColor Cyan
Write-Host ""

$continuar = Read-Host "Pressione Enter quando terminar de executar o SQL no Railway"

Write-Host ""
Write-Host "üß™ TESTANDO CONEX√ÉO..." -ForegroundColor Yellow

# Verificar se existe um arquivo .env no backend
$envFile = "backend/.env"
if (Test-Path $envFile) {
    Write-Host "   üìÑ Arquivo .env encontrado" -ForegroundColor Green
    
    # Testar conex√£o via script Node.js
    Set-Location backend
    Write-Host "   üîç Testando conex√£o com banco..." -ForegroundColor White
    
    try {
        $testResult = node -e "
        require('dotenv').config();
        const { Pool } = require('pg');
        const pool = new Pool({
            connectionString: process.env.DATABASE_URL,
            ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
        });
        
        pool.query('SELECT COUNT(*) as count FROM empresas')
            .then(result => {
                console.log('‚úÖ Conex√£o OK - Tabelas encontradas:', result.rows[0].count);
                process.exit(0);
            })
            .catch(err => {
                console.log('‚ùå Erro:', err.message);
                process.exit(1);
            });
        " 2>&1
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "   ‚úÖ Banco conectado e tabelas criadas!" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå Problema na conex√£o: $testResult" -ForegroundColor Red
        }
    } catch {
        Write-Host "   ‚ö†Ô∏è  N√£o foi poss√≠vel testar automaticamente" -ForegroundColor Yellow
    }
    
    Set-Location ..
} else {
    Write-Host "   ‚ö†Ô∏è  Arquivo .env n√£o encontrado no backend" -ForegroundColor Yellow
    Write-Host "   üí° Configure a DATABASE_URL primeiro" -ForegroundColor White
}

Write-Host ""
Write-Host "üéâ PROCESSO CONCLU√çDO!" -ForegroundColor Green
Write-Host "   Agora voc√™ pode fazer o deploy no Vercel" -ForegroundColor White
Write-Host ""
